---
  - hosts: localhost
    gather_facts: False
    roles:
      - { role: kubespray-defaults }
      - { role: bastion-ssh-config, tags: ["localhost", "bastion"] }
  
  - hosts: k8s-cluster:etcd:calico-rr
    any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
    gather_facts: false
    vars:
      ansible_ssh_pipelining: False
    role:
      - { role: kubespray-defaults }
      - { role: bootstrap-os, tags: bootstrap-os }
  
  - hosts: k8s-cluster:etcd:calico-rr
    any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
    vars:
      ansible_ssh_pipelining: true
    gather_facts: true
    pre_tasks:
      - name: gather facts from all instances
        setup:
        delegate_to: "{{item}}"
        delegate_facts: True
        with_items: "{{ groups['k8s-cluster'] + groups['etcd'] + groups['calico-rr']|default([]) }}"
  
  - hosts: k8s-cluster:etcd:calico-rr
    any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
    roles:
      - { role: kubespray-defaults}
      - { role: kubernetes/preinstall, tags: preinstall }
      - { role: docker, tags: docker, when: manage_docker|default(true) }
      - role: rkt
        tags: rkt
        when: "'rkt' in [etcd_deployment_type, kubelet_deployment_type, vault_deployment_type]"
      - { role: download, tags: download, skip_downloads: false }
    environment: "{{proxy_env}}"
  
  - hosts: etcd:k8s-cluster:vault:calico-rr
    any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
    roles:
      - { role: kubespray-defaults, when: "cert_management == 'vault'" }
      - { role: vault, tags: vault, vault_bootstrap: true, when: "cert_management == 'vault'" }
    environment: "{{proxy_env}}"